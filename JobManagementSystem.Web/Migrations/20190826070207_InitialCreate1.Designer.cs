// <auto-generated />
using System;
using JobManagementSystem.DataAccess.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JobManagementSystem.Web.Migrations
{
    [DbContext(typeof(JobSystemDbContext))]
    [Migration("20190826070207_InitialCreate1")]
    partial class InitialCreate1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JobManagementSystem.DataAccess.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateAt");

                    b.Property<int>("CreateBy");

                    b.Property<string>("CreateByEmail");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("Status");

                    b.Property<DateTime>("UpdateAt");

                    b.Property<string>("UpdateBy");

                    b.HasKey("Id");

                    b.HasIndex("CreateBy");

                    b.HasIndex("Id", "Name")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("JobManagementSystem.DataAccess.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("ntext");

                    b.Property<DateTime>("CreateAt");

                    b.Property<int>("CreateBy");

                    b.Property<string>("CreateByEmail");

                    b.Property<string>("FeedbackContent")
                        .HasColumnType("ntext");

                    b.Property<string>("HandlerUserEmail");

                    b.Property<bool>("Status");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CreateBy");

                    b.HasIndex("Title");

                    b.HasIndex("Id", "CreateBy");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("JobManagementSystem.DataAccess.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDay");

                    b.Property<DateTime>("CreateAt");

                    b.Property<int>("CreateBy");

                    b.Property<string>("CreateByEmail");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FullName")
                        .HasMaxLength(30);

                    b.Property<bool>("Gender");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20);

                    b.Property<int>("Role");

                    b.Property<bool>("Status");

                    b.Property<DateTime>("UpdateAt");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Role", "FullName", "CreateBy");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Ha Noi",
                            BirthDay = new DateTime(2019, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateAt = new DateTime(2019, 8, 26, 14, 2, 6, 907, DateTimeKind.Local).AddTicks(9592),
                            CreateBy = 0,
                            Email = "admin@job.com.vn",
                            FullName = "Admin",
                            Gender = true,
                            Password = "e10adc3949ba59abbe56e057f20f883e",
                            PhoneNumber = "0123456789",
                            Role = 1,
                            Status = true,
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("JobManagementSystem.DataAccess.Models.Category", b =>
                {
                    b.HasOne("JobManagementSystem.DataAccess.Models.User", "User")
                        .WithMany("Categories")
                        .HasForeignKey("CreateBy")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("JobManagementSystem.DataAccess.Models.Contact", b =>
                {
                    b.HasOne("JobManagementSystem.DataAccess.Models.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("CreateBy")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
